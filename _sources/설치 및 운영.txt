

설치 및 운영
============

이 장에서는 Octopus의 설치 및 운영에 대해 기술한다.

준비
----

Octopus를 실행하기 위해서 아래의 실행 환경과 요구 사항을 만족해야 한다.

실행 환경
^^^^^^^^^


Octopus는 Linux 계열의 OS에서 실행 가능하며, CentOS를 추천한다. 또한 앞으로 나올 모든 예제에서는 octopus라는 사용자 계정을 사용한다.

요구사항
^^^^^^^^

Octopus는 JVM 환경 위에서 실행되며, Hadoop과 메타스토어용 데이터베이스를 필요로 한다. 아래에 각 요구사항에 대한 세부 설명이 있다.

- JVM

  - Java 1.7 이상
  - JVM 설치 경로를 ``JAVA_HOME`` 환경변수에 설정
     - 아래는 ``JAVA_HOME`` 환경변수 설정 예시이다.

.. code-block:: bash

    $ export JAVA_HOME=/usr/lib/jvm/java

- Hadoop

  - Hadoop 2.6.0 이상 (실행 시간 의존)
  - Hadoop의 설치 경로를 HADOOP_PREFIX 환경변수에 설정
     - 아래는 HADOOP_PREFIX 환경변수 설정 예시이다.

.. code-block:: bash

    $ export HADOOP_PREFIX=/home/octopus/hadoop

- 메타스토어용 데이터베이스

  - Octopus는 DataNucleus가 지원하는 RDBMS를 메타스토어로 사용할 수 있음
  - 메타스토어로 사용할 데이터베이스의 JDBC 드라이버를 Octopus의 CLASSPATH에 추가
     - (2.2.3의 share/octopus/ext에 JDBC 드라이버를 추가)

만약 바이너리 배포가 아닌 소스코드를 사용하여 Octopus를 설치할 경우 아래의 요구사항이 추가로 필요하다.

- Maven

  - Maven 3.0 이상
  - 인터넷 연결

설치
----
현재 Octopus는 별도의 바이너리 배포를 제공하고 있지 않다. 대신 소스코드를 직접 빌드해서 나온 바이너리 배포를 압축 해제하여 설치한다.

다운로드
^^^^^^^^
Octopus의 소스코드는 아래의 git 저장소에서 얻을 수 있다.

https://github.com/bitnine-oss/octopus.git

이 문서에서는 아래의 명령을 통해 Octopus 소스코드를 얻었다고 가정한다.

.. code-block:: bash

    $ cd
    $ git clone https://github.com/bitnine-oss/octopus.git

빌드 및 설치
^^^^^^^^^^^^
다운로드 한 Octopus 소스코드가 있는 디렉터리에서 아래의 명령을 수행하면 Octopus의 바이너리를 얻을 수 있다.

.. code-block:: bash

    $ cd octopus
    $ mvn package

빌드 결과 바이너리는 소스코드 디렉터리 내의 octopus-assembly/target 경로에 있는 octopus-x.y.z-SNAPSHOT.tar.gz 이름의 파일이다. 여기서 x.y.z는 버전 정보이며, 이 문서가 작성되는 시점의 버전은 0.1.0이다.

위의 바이너리 파일을 원하는 위치에 압축 해제하면 설치가 완료된다. 이 문서에서는 octopus 계정의 홈 디렉터리에 압축 해제했다고 가정한다.

.. code-block:: bash

    $ cd
    $ tar -xzf octopus/octopus-assembly/target/octopus-0.1.0-SNAPSHOT.tar.gz

디렉터리 구조
^^^^^^^^^^^^^
설치한 Octopus의 디렉터리 구조는 아래와 같다.

.. _making-a-table:

====================    ======================================================
디렉터리 명               설명
====================    ======================================================
bin                      Octopus 및 CLI(octaline) 실행 스크립트
etc/octopus              Octopus 설정 파일
libexec                  기본 환경 설정 스크립트
logs                     실행 로그
sbin                     데몬 실행/중지 스크립트
share/octopus            Octopus 관련 JAR 파일
share/octopus/lib        Octopus 실행시 의존하는 JAR 파일
share/octopus/ext        Octopus에서 사용할 외부 JAR 파일 (예: JDBC 드라이버)
====================    ======================================================

운영
----
이 장에서는 Octopus 운영에 필요한 설정 및 Octopus의 실행/중지에 대해 기술한다.

설정 파일
^^^^^^^^^
Octopus의 설정 파일은 설정 파일 디렉터리에 있는 octopus-env.sh.template 파일과 octopus-default.xml.template 파일을 복사한 octopus-env.sh 파일과 octopus-site.xml 파일이 있다.

먼저 octopus-env.sh 파일은 Octopus 실행시 환경 변수와 JVM 값을 설정한다.

.. _making-b-table:

====================== =============================================================  ===========================   ===========
변수명                  설명                                                             기본값                        비고
====================== =============================================================  ===========================   ===========
JAVA_HOME                JVM 경로                                                         없음                         필수
HADOOP_PREFIX            Hadoop 경로                                                      없음                         필수
OCTOPUS_HEAPSIZE         JVM heap 크기 (MB)                                               1000
OCTOPUS_IDENT_STR        Octotpus 인스턴스의 문자열                                       $USER 환경 변수
OCTOPUS_PID_DIR          pid 파일 저장 디렉터리                                             /tmp
OCTOPUS_LOG_DIR          log 파일 저장 디렉터리                                            $OCTOPUS_PREFIX/logs
OCTOPUS_LOG_FILE         log 파일 이름                                                      octopus.log
OCTOPUS_LOG_LEVEL        로깅 레벨                                                          INFO
OCTOPUS_STOP_TIMEOUT         Octopus 인스턴스 정지시 kill 명령 수행 유예 시간 (초)              5
====================== =============================================================  ===========================   ===========

참고로 JAVA_HOME과 HADOOP_PREFIX를 환경 변수로 미리 설정했다면, 필수로 설정하지 않아도 된다. 아래는 octopus-env.sh 파일의 작성 예시이다.

.. code-block:: bash

    JAVA_HOME=/usr/lib/jvm/java
    HADOOP_PREFIX=/home/octopus/hadoop
    OCTOPUS_HEAPSIZE=4096
    OCTOPUS_LOG_LEVEL=DEBUG

다음으로 octopus-site.xml 파일은 Octopus 인스턴스를 설정한다.

.. _making-c-table:

===============================================   ===============================================================   ==================================================================
변수명                                                      설명                                                          기본값
===============================================   ===============================================================   ==================================================================
master.server.address                              Octopus 인스턴스 주소                                               0.0.0.0:58000
master.session.max                                 Octopus에 접속 가능한 최대 세션 수                                    7
metastore.class                                    Octopus 메타스토어를 구현한 클래스                                        Kr.co.bitnine.octopus.meta.jdo.JDOMetaStore
metastore.jdo.connection.drivername                Octopus 메타스토어에서 사용할 데이터베이스의 JDBC 드라이버            없음
metastore.jdo.connection.URL                       Octopus 메타스토어에서 사용할 데이터베이스의 URL                     없음
metastore.jdo.connection.username                  Octopus 메타스토어에서 사용할 데이터베이스의 계정                      없음
metastore.jdo.connection.password                  Octopus 메타스토어에서 사용할 데이터베이스의 계정 암호                   없음
===============================================   ===============================================================   ==================================================================

아래는 octopus-site.xml 파일의 작성 예시이다.

.. code-block:: bash

    configuration>
      <property>
        <name>master.server.address</name>
        <value>0.0.0.0:61958</value>
      </property>
      <property>
        <name>master.session.max</name>
        <value>256</value>
      </property>
      <property>
        <name>metastore.class</name>
        <value>kr.co.bitnine.octopus.meta.jdo.JDOMetaStore</value>
      </property>
      <property>
        <name>metastore.jdo.connection.drivername</name>
        <value>org.mariadb.jdbc.Driver</value>
      </property>
      <property>
        <name>metastore.jdo.connection.URL</name>
        <value> jdbc:mariadb://localhost/octopus</value>
      </property>
      <property>
        <name>metastore.jdo.connection.username</name>
        <value>octopus</value>
      </property>
      <property>
        <name>metastore.jdo.connection.password</name>
        <value>bitnine</value>
      </property>
    </configuration>

실행 및 중지
^^^^^^^^^^^^
위의 설정 과정을 제대로 수행했다면, Octopus의 실행과 중지는 sbin 디렉터리에 있는 start-octopus.sh과 stop-octopus.sh 스크립트를 사용해서 손쉽게 할 수 있다.

Octopus 인스턴스가 제대로 실행되었는지 확인하려면 jps 명령어로 OctopusMaster 프로세스가 있는지 보면 된다. 아래는 Octopus 인스턴스가 제대로 실행되었는지 확인하는 예제이다.

.. code-block:: bash


    $ jps
    16468 Jps
    16425 OctopusMaster




